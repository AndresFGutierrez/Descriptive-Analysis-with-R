prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento") +
scale_fill_manual(values = c("green", "orange")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento") +
scale_fill_manual(values = c("green", "orange")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras2)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`))+
geom_point()
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`))+
geom_point()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`))+
geom_point(colour = 4)
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, color = dist))+
geom_point()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, alpha = dist))+
geom_point(colour = 2)
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, alpha = dist))+
geom_point(colour = 2)
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=dist))+
geom_point() +
scale_color_gradient(low = "#67c9ff", high = "#f2bbfc")
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=dist))+
geom_point(show.legend = FALSE) +
scale_color_gradient(low = "#67c9ff", high = "#f2bbfc")
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`)) +
geom_point(size=2) +  # Ajustar tamaño de los puntos
scale_color_gradient(low = "#67c9ff", high = "#f2bbfc") +  # Gradiente de color
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +  # Etiquetas de ejes y leyenda
theme_bw()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point() +
scale_color_gradient(low = "#67c9ff", high = "#f2bbfc")
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "#67c9ff", high = "red")
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_void()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_minimal()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_dark()
graf_dispersion
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_dark()
ggplotly(graf_dispersion)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)") +
theme_dark()
ggplotly(graf_dispersion)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_dark()
ggplotly(graf_dispersion)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(plotly)
datos_nacimientos <- read_excel("./data/Nacidos Hospital San Juan de Dios Rionegro-Ant.xlsx")
summary(datos_nacimientos)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
print(resumen_peso)
resumen_talla <- datos_nacimientos %>%
summarise(
media_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE),
mediana_talla = median(`TALLA (Centímetros)`, na.rm = TRUE),
desv_estandar_talla = sd(`TALLA (Centímetros)`, na.rm = TRUE)
)
print(resumen_talla)
resumen_tiempo_gestacion <- datos_nacimientos %>%
summarise(
media_tiempo_gestacion = mean(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
mediana_tiempo_gestacion = median(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
desv_estandar_tiempo_gestacion = sd(`TIEMPO DE GESTACIÓN`, na.rm = TRUE)
)
print(resumen_tiempo_gestacion)
resumen_consultas_prenatales <- datos_nacimientos %>%
summarise(
media_consultas_prenatales = mean(`CONSULTAS PRENATALES`, na.rm = TRUE),
mediana_consultas_prenatales = median(`CONSULTAS PRENATALES`, na.rm = TRUE),
desv_estandar_consultas_prenatales = sd(`CONSULTAS PRENATALES`, na.rm = TRUE)
)
print(resumen_consultas_prenatales)
moda_sexo <- datos_nacimientos %>%
count(SEXO) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(SEXO)
print(moda_sexo)
moda_multiplicidad_embarazo <- datos_nacimientos %>%
count(`MULTIPLICIDAD EMBARAZO`) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(`MULTIPLICIDAD EMBARAZO`)
print(moda_multiplicidad_embarazo)
cant_nacimientos_por_area <- datos_nacimientos %>%
group_by(`AREA NACIMIENTO`) %>%
summarise(cant_nac = n())
print(cant_nacimientos_por_area)
#peso y talla promedio de los niños con siete o más consultas prenatales
medida_filtrada <- datos_nacimientos %>%
filter(`CONSULTAS PRENATALES` >= 7) %>%
summarise(
prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)") +
theme_dark()
ggplotly(graf_dispersion)
packages <- c("readxl", "dplyr", "knitr", "kableExtra", "ggplot2", "plotly")
installed <- packages %in% installed.packages()
if (any(!installed)) {
install.packages(packages[!installed])
}
lapply(packages, require, character.only = TRUE)
datos_nacimientos <- read_excel("./data/Nacidos Hospital San Juan de Dios Rionegro-Ant.xlsx")
summary(datos_nacimientos)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
print(resumen_peso)
resumen_talla <- datos_nacimientos %>%
summarise(
media_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE),
mediana_talla = median(`TALLA (Centímetros)`, na.rm = TRUE),
desv_estandar_talla = sd(`TALLA (Centímetros)`, na.rm = TRUE)
)
print(resumen_talla)
resumen_tiempo_gestacion <- datos_nacimientos %>%
summarise(
media_tiempo_gestacion = mean(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
mediana_tiempo_gestacion = median(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
desv_estandar_tiempo_gestacion = sd(`TIEMPO DE GESTACIÓN`, na.rm = TRUE)
)
print(resumen_tiempo_gestacion)
resumen_consultas_prenatales <- datos_nacimientos %>%
summarise(
media_consultas_prenatales = mean(`CONSULTAS PRENATALES`, na.rm = TRUE),
mediana_consultas_prenatales = median(`CONSULTAS PRENATALES`, na.rm = TRUE),
desv_estandar_consultas_prenatales = sd(`CONSULTAS PRENATALES`, na.rm = TRUE)
)
print(resumen_consultas_prenatales)
moda_sexo <- datos_nacimientos %>%
count(SEXO) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(SEXO)
print(moda_sexo)
moda_multiplicidad_embarazo <- datos_nacimientos %>%
count(`MULTIPLICIDAD EMBARAZO`) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(`MULTIPLICIDAD EMBARAZO`)
print(moda_multiplicidad_embarazo)
cant_nacimientos_por_area <- datos_nacimientos %>%
group_by(`AREA NACIMIENTO`) %>%
summarise(cant_nac = n())
print(cant_nacimientos_por_area)
#peso y talla promedio de los niños con siete o más consultas prenatales
medida_filtrada <- datos_nacimientos %>%
filter(`CONSULTAS PRENATALES` >= 7) %>%
summarise(
prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo", title="Nacimientos registrados por sexo y tipo de parto") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento", title="Nacimientos registrados por área de nacimiento y tipo de parto") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)", title="Variable peso vs. talla") +
theme_dark()
ggplotly(graf_dispersion)
packages <- c("readxl", "dplyr", "knitr", "kableExtra", "ggplot2", "plotly")
installed <- packages %in% installed.packages()
if (any(!installed)) {
install.packages(packages[!installed])
}
lapply(packages, require, character.only = TRUE)
packages <- c("readxl", "dplyr", "knitr", "kableExtra", "ggplot2", "plotly")
installed <- packages %in% installed.packages()
if (any(!installed)) {
install.packages(packages[!installed])
}
lapply(packages, require, character.only = TRUE)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
resumen_peso
datos_nacimientos <- read_excel("./data/Nacidos Hospital San Juan de Dios Rionegro-Ant.xlsx")
summary(datos_nacimientos)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
resumen_peso
resumen_talla <- datos_nacimientos %>%
summarise(
media_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE),
mediana_talla = median(`TALLA (Centímetros)`, na.rm = TRUE),
desv_estandar_talla = sd(`TALLA (Centímetros)`, na.rm = TRUE)
)
print(resumen_talla)
resumen_tiempo_gestacion <- datos_nacimientos %>%
summarise(
media_tiempo_gestacion = mean(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
mediana_tiempo_gestacion = median(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
desv_estandar_tiempo_gestacion = sd(`TIEMPO DE GESTACIÓN`, na.rm = TRUE)
)
print(resumen_tiempo_gestacion)
resumen_consultas_prenatales <- datos_nacimientos %>%
summarise(
media_consultas_prenatales = mean(`CONSULTAS PRENATALES`, na.rm = TRUE),
mediana_consultas_prenatales = median(`CONSULTAS PRENATALES`, na.rm = TRUE),
desv_estandar_consultas_prenatales = sd(`CONSULTAS PRENATALES`, na.rm = TRUE)
)
print(resumen_consultas_prenatales)
moda_sexo <- datos_nacimientos %>%
count(SEXO) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(SEXO)
print(moda_sexo)
moda_multiplicidad_embarazo <- datos_nacimientos %>%
count(`MULTIPLICIDAD EMBARAZO`) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(`MULTIPLICIDAD EMBARAZO`)
print(moda_multiplicidad_embarazo)
cant_nacimientos_por_area <- datos_nacimientos %>%
group_by(`AREA NACIMIENTO`) %>%
summarise(cant_nac = n())
print(cant_nacimientos_por_area)
#peso y talla promedio de los niños con siete o más consultas prenatales
medida_filtrada <- datos_nacimientos %>%
filter(`CONSULTAS PRENATALES` >= 7) %>%
summarise(
prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo", title="Nacimientos registrados por sexo y tipo de parto") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento", title="Nacimientos registrados por área de nacimiento y tipo de parto") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)", title="Variable peso vs. talla") +
theme_dark()
ggplotly(graf_dispersion)
datos_nacimientos <- read_excel("./data/Nacidos Hospital San Juan de Dios Rionegro-Ant.xlsx")
summary(datos_nacimientos)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
resumen_peso
resumen_talla <- datos_nacimientos %>%
summarise(
media_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE),
mediana_talla = median(`TALLA (Centímetros)`, na.rm = TRUE),
desv_estandar_talla = sd(`TALLA (Centímetros)`, na.rm = TRUE)
)
print(resumen_talla)
resumen_tiempo_gestacion <- datos_nacimientos %>%
summarise(
media_tiempo_gestacion = mean(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
mediana_tiempo_gestacion = median(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
desv_estandar_tiempo_gestacion = sd(`TIEMPO DE GESTACIÓN`, na.rm = TRUE)
)
print(resumen_tiempo_gestacion)
resumen_consultas_prenatales <- datos_nacimientos %>%
summarise(
media_consultas_prenatales = mean(`CONSULTAS PRENATALES`, na.rm = TRUE),
mediana_consultas_prenatales = median(`CONSULTAS PRENATALES`, na.rm = TRUE),
desv_estandar_consultas_prenatales = sd(`CONSULTAS PRENATALES`, na.rm = TRUE)
)
print(resumen_consultas_prenatales)
moda_sexo <- datos_nacimientos %>%
count(SEXO) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(SEXO)
print(moda_sexo)
moda_multiplicidad_embarazo <- datos_nacimientos %>%
count(`MULTIPLICIDAD EMBARAZO`) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(`MULTIPLICIDAD EMBARAZO`)
print(moda_multiplicidad_embarazo)
cant_nacimientos_por_area <- datos_nacimientos %>%
group_by(`AREA NACIMIENTO`) %>%
summarise(cant_nac = n())
print(cant_nacimientos_por_area)
#peso y talla promedio de los niños con siete o más consultas prenatales
medida_filtrada <- datos_nacimientos %>%
filter(`CONSULTAS PRENATALES` >= 7) %>%
summarise(
prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo", title="Nacimientos registrados por sexo y tipo de parto") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento", title="Nacimientos registrados por área de nacimiento y tipo de parto") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)", title="Variable peso vs. talla") +
theme_dark()
ggplotly(graf_dispersion)
datos_nacimientos <- read_excel("./data/Nacidos Hospital San Juan de Dios Rionegro-Ant.xlsx")
summary(datos_nacimientos)
resumen_peso <- datos_nacimientos %>%
summarise(
media_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
mediana_peso = median(`PESO (Gramos)`, na.rm = TRUE),
desv_estandar_peso = sd(`PESO (Gramos)`, na.rm = TRUE)
)
resumen_peso
resumen_talla <- datos_nacimientos %>%
summarise(
media_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE),
mediana_talla = median(`TALLA (Centímetros)`, na.rm = TRUE),
desv_estandar_talla = sd(`TALLA (Centímetros)`, na.rm = TRUE)
)
print(resumen_talla)
resumen_tiempo_gestacion <- datos_nacimientos %>%
summarise(
media_tiempo_gestacion = mean(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
mediana_tiempo_gestacion = median(`TIEMPO DE GESTACIÓN`, na.rm = TRUE),
desv_estandar_tiempo_gestacion = sd(`TIEMPO DE GESTACIÓN`, na.rm = TRUE)
)
print(resumen_tiempo_gestacion)
resumen_consultas_prenatales <- datos_nacimientos %>%
summarise(
media_consultas_prenatales = mean(`CONSULTAS PRENATALES`, na.rm = TRUE),
mediana_consultas_prenatales = median(`CONSULTAS PRENATALES`, na.rm = TRUE),
desv_estandar_consultas_prenatales = sd(`CONSULTAS PRENATALES`, na.rm = TRUE)
)
print(resumen_consultas_prenatales)
moda_sexo <- datos_nacimientos %>%
count(SEXO) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(SEXO)
print(moda_sexo)
moda_multiplicidad_embarazo <- datos_nacimientos %>%
count(`MULTIPLICIDAD EMBARAZO`) %>%
filter(n == max(n)) %>% # Filtrar la categoría con la mayor frecuencia
select(`MULTIPLICIDAD EMBARAZO`)
print(moda_multiplicidad_embarazo)
cant_nacimientos_por_area <- datos_nacimientos %>%
group_by(`AREA NACIMIENTO`) %>%
summarise(cant_nac = n())
print(cant_nacimientos_por_area)
#peso y talla promedio de los niños con siete o más consultas prenatales
medida_filtrada <- datos_nacimientos %>%
filter(`CONSULTAS PRENATALES` >= 7) %>%
summarise(
prom_peso = mean(`PESO (Gramos)`, na.rm = TRUE),
prom_talla = mean(`TALLA (Centímetros)`, na.rm = TRUE)
)
#cantidad de niños con padres mayores a 35 años.
cant_padres_may <- datos_nacimientos %>%
filter(`EDAD PADRE` > 35) %>%
summarise(cantidad = n())
print(medida_filtrada)
print(cant_padres_may)
graf_barras <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=SEXO)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Sexo", title="Nacimientos registrados por sexo y tipo de parto") +
scale_fill_manual(values = c("pink", "skyblue")) +  # Colores personalizados para cada sexo
theme_bw()
ggplotly(graf_barras)
graf_barras2 <- ggplot(datos_nacimientos, aes(x=`TIPO PARTO`, fill=`AREA NACIMIENTO`)) +
geom_bar(position="dodge", colour="black") +  # Agrupar por sexo en barras separadas (dodge)
labs(x="Tipo de Parto", y="Cantidad de Nacimientos", fill="Area de nacimiento", title="Nacimientos registrados por área de nacimiento y tipo de parto") +
theme_bw()
ggplotly(graf_barras2)
graf_dispersion <- ggplot(datos_nacimientos, aes(x=`PESO (Gramos)`, y=`TALLA (Centímetros)`, colour=`PESO (Gramos)`))+
geom_point(size=2) +
scale_color_gradient(low = "orange", high = "red")+
labs(x="Peso (Gramos)", y="Talla (Centímetros)", colour="Peso (Gramos)", title="Variable peso vs. talla") +
theme_dark()
ggplotly(graf_dispersion)
